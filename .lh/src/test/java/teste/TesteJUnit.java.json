{
    "sourceFile": "src/test/java/teste/TesteJUnit.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751341609023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751341609023,
            "name": "Commit-0",
            "content": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage teste;\n\nimport br.com.antoniodiego.gertarefas.pojo.GrupoTarefas;\nimport br.com.antoniodiego.gertarefas.pojo.TarefaComposta;\nimport br.com.antoniodiego.gertarefas.pojo.TarefaCoordenada;\nimport br.com.antoniodiego.gertarefas.util.Constantes;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\n\n/**\n *\n * @author Ant?nio Diego <your.name at your.org>\n */\npublic class TesteJUnit {\n\n    //private static ConversXMLD cxd;\n    private Logger logTe;\n\n    public TesteJUnit() {\n        logTe = LogManager.getLogger();\n    }\n\n    @BeforeClass\n    public static void setUpClass() {\n   //     cxd = new ConversXMLD();\n    }\n\n    @AfterClass\n    public static void tearDownClass() {\n    }\n\n    @Before\n    public void setUp() {\n    }\n\n    @After\n    public void tearDown() {\n    }\n\n    // TODO add test methods here.\n    // The methods must be annotated with annotation @Test. For example:\n    //\n    // @Test\n    // public void hello() {}\n    @Test\n    public void testImpTarAv() {\n         logTe.traceEntry();\n        String xml = \"<?xml version='1.0'?><tarefas><tarefacomposta><id>1</id><tarefacoordenada><concluida>false</concluida><dataconclusao/><descricao>teste</descricao></tarefacoordenada></tarefacomposta></tarefas>\";\n        logTe.debug(\"Lendr g e t\");\n//        List<Object> t = cxd\n//                .leGrupoETars(new ByteArrayInputStream(xml.getBytes()));\n//          logTe.debug(\"Após l\");\n//        Assert.assertEquals(1, t.size());\n//        Object o = t.get(0);\n//        Assert.assertTrue(\"Correto!\", o instanceof TarefaComposta);\n//        TarefaComposta tc = (TarefaComposta) o;\n//        Assert.assertEquals(1, tc.getTarefasFilhas().size());\n//        TarefaCoordenada tfA = tc.getTarefasFilhas().get(0);\n//        Assert.assertEquals(tfA.isConcluida(), false);\n//        Assert.assertEquals(\"teste\", tfA.getDescricao());\n    }\n\n    @Test\n    public void testaExp() {\n        logTe.trace(\"Inic testaExp\");\n        GrupoTarefas g = new GrupoTarefas(\"Teste\");\n        GrupoTarefas sub = new GrupoTarefas(\"Subt\");\n        TarefaComposta t = new TarefaComposta();\n        TarefaCoordenada t1 = new TarefaCoordenada(true, LocalDateTime.now(), \"\", \"Teste tar c\");\n        TarefaCoordenada t2 = new TarefaCoordenada(true, LocalDateTime.now(), \"\", \"De tar cr 2\");\n        t.getTarefasFilhas().add(t1);\n        t.getTarefasFilhas().add(t2);\n        sub.add(t);\n\n        g.add(sub);\n\n        List<GrupoTarefas> grs = new ArrayList<>();\n        grs.add(g);\n\n//        String xmlG = cxd.geraXML(grs, null);\n//        System.out.println(\"xmlG: \" + xmlG);\n//\n//        List<Object> li = cxd.leGrupoETars(new ByteArrayInputStream(xmlG.getBytes()));\n//        Assert.assertTrue(\"Verd\", li.size() == 1);\n//        Object prim = li.get(0);\n//        Assert.assertTrue(\"Gr\", prim instanceof GrupoTarefas);\n//        GrupoTarefas prG = (GrupoTarefas) prim;\n//        Assert.assertEquals(1, prG.getSubgrupos().size());\n//        GrupoTarefas subL = prG.getSubgrupos().get(0);\n//        Assert.assertEquals(1, subL.getTarefas().size());\n//        Tarefa pr = subL.get(0);\n//        Assert.assertTrue(\"T\", pr instanceof TarefaComposta);\n//        TarefaComposta tc = (TarefaComposta) pr;\n//        TarefaCoordenada f1 = tc.getTarefasFilhas().get(0);\n//        logTe.traceExit(\"Fim testeExp\");\n    }\n\n    @Test\n    public void testaImSun() {\n        String x = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><tarefas><grupo><id>34</id><titulo>beta 2</titulo><grupo><id>35</id><titulo>Tarefas</titulo><tarefacomposta><id>185</id><titulo>Concl</titulo><concluida>true</concluida><dataconclusao>13/07/18</dataconclusao><data>2018-07-08</data><datafazer>null</datafazer><prioridade>0</prioridade><tarefacoordenada><concluida>true</concluida><dataconclusao>13/07/18</dataconclusao><descricao>Concluir tarefa comp pai ao conc todas as coorden filhas</descricao><comentario>10/07. fiz mas falta preencher data conc</comentario></tarefacoordenada></tarefacomposta></grupo><grupo><id>36</id><titulo>Ideias</titulo><tarefacomposta><id>186</id><titulo>Data e hor</titulo><concluida>true</concluida><dataconclusao>13/07/18</dataconclusao><data>2018-07-08</data><datafazer>null</datafazer><prioridade>0</prioridade><tarefacoordenada><concluida>true</concluida><dataconclusao>13/07/18</dataconclusao><descricao>Usar estilo data e hora no date form tar coode</descricao><comentario>10/07/18 usei mas ao salva apen data dava erro. 11/07/18 pus uma coluna para data e coluna para horas mas ficou dificil controlar editores</comentario></tarefacoordenada></tarefacomposta></grupo></grupo></tarefas>\";\n//        List<Object> li = cxd.leGrupoETars(new ByteArrayInputStream(x.getBytes()));\n//        GrupoTarefas g0 = (GrupoTarefas) li.get(0);\n//        GrupoTarefas sub0 = g0.getSubgrupos().get(0);\n//        Assert.assertEquals(\"Tarefas\", sub0.getTitulo());\n//        TarefaComposta ccon = (TarefaComposta) sub0.getTarefas().get(0);\n//        Assert.assertEquals(\"Concl\", ccon.getTitulo());\n//        //Está lendo 18 e não 2018\n//        Assert.assertEquals(\"Falha leitura dc comp\", LocalDate.of(18, 07, 13), ccon.getDataConclusao().toLocalDate());//Constantes.FORMATADOR_DATA_BR_T.format(ccon.getDataConclusao().toLocalDate()));\n    }\n\n    @Test\n    public void testF() {\n        LocalDate d = LocalDate.now();\n        System.out.println(Constantes.FORMATADOR_DATA_BR_T.format(d));\n    }\n    \n    \n}\n"
        }
    ]
}