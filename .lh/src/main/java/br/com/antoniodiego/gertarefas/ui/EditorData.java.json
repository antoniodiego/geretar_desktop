{
    "sourceFile": "src/main/java/br/com/antoniodiego/gertarefas/ui/EditorData.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751340800146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751340800146,
            "name": "Commit-0",
            "content": "package br.com.antoniodiego.gertarefas.ui;\n\nimport java.awt.Component;\nimport java.awt.Toolkit;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.KeyEvent;\nimport java.text.ParseException;\n\nimport javax.swing.AbstractAction;\nimport javax.swing.AbstractCellEditor;\nimport javax.swing.JFormattedTextField;\nimport javax.swing.JOptionPane;\nimport javax.swing.JTable;\nimport javax.swing.KeyStroke;\nimport javax.swing.table.TableCellEditor;\n\npublic class EditorData extends AbstractCellEditor implements TableCellEditor {\n\n    /**\n     *\n     */\n    private static final long serialVersionUID = 1L;\n    private JFormattedTextField jtf;\n    private final boolean tempo;\n\n    public EditorData(boolean tempo) {\n        this.tempo = tempo;\n        constroi();\n    }\n\n    private void constroi() {\n        jtf = new JFormattedTextField(new FormatadorJTime(tempo));\n\n//        DateFormat df = tempo ? DateFormat.getTimeInstance(DateFormat.SHORT, new Locale(\"pt\", \"BR\")) : Constantes.FORMATADOR_BR;//DateFormat.getDateInstance(DateFormat.SHORT, Constantes.FORMATADOR_BR);//getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, new Locale(\"pt\", \"BR\"));\n//        DateFormatter dft = new DateFormatter(df);\n//\n//        DefaultFormatterFactory dff = new DefaultFormatterFactory();\n//        dff.setEditFormatter(dft);\n//\n//        //    jtf.setFormatterFactory(dff);\n        jtf.setColumns(10);\n        jtf.setFocusLostBehavior(JFormattedTextField.PERSIST);\n        jtf.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), \"checa\");\n        jtf.getActionMap().put(\"checa\", new AcaoChecar());\n    }\n\n    @Override\n    public Object getCellEditorValue() {\n        return jtf.getValue();\n    }\n\n    @Override\n    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {\n\n        jtf.setValue(value);\n        return jtf;\n    }\n\n    @Override\n    public boolean stopCellEditing() {\n        //     JFormattedTextField ftf = (JFormattedTextField) getComponent();\n        String texto = jtf.getText();\n        if (jtf.isEditValid()) {\n            if (texto == null || texto.length() == 0) {\n                jtf.setValue(null);\n            } else {\n                System.out.println(\"valid\");\n                try {\n                    jtf.commitEdit();\n                } catch (ParseException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n            }\n        } else if (texto != null && texto.length() > 0) {\n            return false;\n        }\n\n        return super.stopCellEditing();\n    }\n\n    private class AcaoChecar extends AbstractAction {\n\n        /**\n         *\n         */\n        private static final long serialVersionUID = 1L;\n\n        @Override\n        public void actionPerformed(ActionEvent arg0) {\n            if (!jtf.isEditValid()) {\n                if (jtf.getText() == null || jtf.getText().length() == 0) {\n                    try {\n                        jtf.commitEdit();\n                        \n                    } catch (ParseException e) {\n                        System.out.println(\"Erro ler data\");\n                    }\n                    jtf.setValue(null);\n                } else {\n                    // System.out.println(\"Inv\\u00e1lido\");\n                    Toolkit.getDefaultToolkit().beep();\n                    JOptionPane.showMessageDialog(jtf, tempo ? \"A hora deve estar no formato HH:MM [AM|PM]\" : \"A data deve estar no formato dd/mm/aaaa\", \"Erro\",\n                            JOptionPane.ERROR_MESSAGE);\n                }\n                jtf.postActionEvent();\n            } else {\n                System.out.println(\"pos ent\");\n                try {\n                    jtf.commitEdit();\n                    jtf.postActionEvent();\n                } catch (ParseException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n                stopCellEditing();\n            }\n        }\n    }\n}\n"
        }
    ]
}