{
    "sourceFile": "src/main/java/br/com/antoniodiego/gertarefas/ui/principal/paineis/PainelTabelaTarefas.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1751340800145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751341836074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n \n import br.com.antoniodiego.gertarefas.model.ModeloTabelaTarefasLista;\n-import br.com.antoniodiego.gertarefas.persist.daos.DAOTarefa;\n+import br.com.antoniodiego.gertarefas.persist.DAOTarefa;\n import br.com.antoniodiego.gertarefas.pojo.Tarefa;\n import br.com.antoniodiego.gertarefas.ui.renderers.LocalDateRenderer;\n import br.com.antoniodiego.gertarefas.ui.renderers.LocalDateTimeRenderer;\n import br.com.antoniodiego.gertarefas.util.Utilid;\n"
                }
            ],
            "date": 1751340800145,
            "name": "Commit-0",
            "content": "package br.com.antoniodiego.gertarefas.ui.principal.paineis;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport java.util.stream.Stream;\n\nimport javax.swing.ButtonGroup;\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JTable;\nimport javax.swing.JTextField;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.table.TableColumn;\nimport javax.swing.table.TableColumnModel;\nimport javax.swing.table.TableRowSorter;\n\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\nimport br.com.antoniodiego.gertarefas.model.ModeloTabelaTarefasLista;\nimport br.com.antoniodiego.gertarefas.persist.daos.DAOTarefa;\nimport br.com.antoniodiego.gertarefas.pojo.Tarefa;\nimport br.com.antoniodiego.gertarefas.ui.renderers.LocalDateRenderer;\nimport br.com.antoniodiego.gertarefas.ui.renderers.LocalDateTimeRenderer;\nimport br.com.antoniodiego.gertarefas.util.Utilid;\nimport java.util.Arrays;\nimport javax.swing.RowSorter.SortKey;\nimport javax.swing.SortOrder;\n\n/**\n * O painel expõe o modelo da tabela de tarefas para que os da\n *\n * @author Antônio Diego <antoniodiegoluz at gmail.com>\n */\npublic class PainelTabelaTarefas extends javax.swing.JPanel {\n\n    private ModeloTabelaTarefasLista modeloTabela;\n    TableRowSorter<ModeloTabelaTarefasLista> rs;\n\n    /**\n     * É melhor setar esse campo manualmente pelo Matisse, usando a opção custo-\n     * mizar código no menu de contexto\n     */\n    private JFrame referenciaJan;\n    /**\n     *\n     */\n    public static final Logger LOG_PAINEL_T = LogManager.\n            getLogger(\"painel_tabela\");\n\n    /**\n     * Creates new form PainelListaTarefas2\n     *\n     * @param dono\n     */\n    public PainelTabelaTarefas() {\n        initComponents();\n\n        modeloTabela = new ModeloTabelaTarefasLista(tabelaTarefas);\n        tabelaTarefas.setModel(modeloTabela);\n\n        tabelaTarefas.setAutoCreateRowSorter(true);\n\n        TableRowSorter<ModeloTabelaTarefasLista> rowS = \n                (TableRowSorter<ModeloTabelaTarefasLista>) tabelaTarefas.getRowSorter();\n\n        SortKey sk = new TableRowSorter.SortKey(8, SortOrder.ASCENDING);\n        rowS.setSortKeys(Arrays.asList(sk));\n\n//        List<RowSorter.SortKey> sortKeys = new ArrayList<>();\n//        sortKeys.add();\n//\n//        rs = new TableRowSorter<>(modeloTabela);\n//\n//        rs.setSortKeys(sortKeys);\n//        \n//        rs.setComparator(8, Comparator.nullsLast((Integer o1, Integer o2) -> {\n//            if (o1 != null && o2 != null) {\n//                return LOG_PAINEL_T.traceExit(\"Compare n n\", o1.compareTo(o2));\n//            }\n//\n//            if (o1 == null && o2 == null) {\n//                return LOG_PAINEL_T.traceExit(\"2 n\", 0);\n//            } else if (o1 == null) {\n//                return LOG_PAINEL_T.traceExit(\"1 n\", 0);\n//            } else {\n//                return LOG_PAINEL_T.traceExit(\"2 n\", 0);\n//            }\n//        }));\n//        \n//        \n//        \n//        tabelaTarefas.setRowSorter(rs);\n        TableColumnModel colM = tabelaTarefas.getColumnModel();\n\n        TableColumn col;\n        for (int i = 0; i < colM.getColumnCount(); i++) {\n            col = colM.getColumn(i);\n\n            switch (i) {\n                case 0:\n                    col.setPreferredWidth(50);\n                    break;\n                case 1:\n                    col.setPreferredWidth(50);\n                    break;\n                case 2:\n                    col.setPreferredWidth(200);\n                    break;\n                case 3:\n                    col.setPreferredWidth(80);\n                    col.setCellRenderer(new LocalDateRenderer());\n                    break;\n                case 4:\n                    col.setPreferredWidth(40);\n                    break;\n                case 5:\n                    col.setPreferredWidth(80);\n                    col.setCellRenderer(new LocalDateRenderer());\n                    break;\n                case 6:\n                    col.setPreferredWidth(80);\n                    col.setCellRenderer(new LocalDateTimeRenderer());\n                    break;\n                case 7:\n                    col.setPreferredWidth(40);\n                    break;\n                case 8:\n                    // Posição\n                    col.setPreferredWidth(40);\n                    break;\n                case 9:\n                    col.setPreferredWidth(100);\n                    break;\n                case 10:\n                    col.setPreferredWidth(70);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        Utilid.carregaInfoTabela(tabelaTarefas);\n    }\n\n    public JFrame getReferenciaJan() {\n        return referenciaJan;\n    }\n\n    public void setReferenciaJan(JFrame referenciaJan) {\n        this.referenciaJan = referenciaJan;\n    }\n\n    public TableRowSorter<ModeloTabelaTarefasLista> getRs() {\n        return rs;\n    }\n\n    /**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        grupoDataAgFiltr = new javax.swing.ButtonGroup();\n        painelDeBusca = new javax.swing.JPanel();\n        btBuscar = new javax.swing.JButton();\n        campoTextoBusca = new javax.swing.JTextField();\n        checkResolvidas = new javax.swing.JCheckBox();\n        painelTabela = new javax.swing.JPanel();\n        scrollPaneTabela = new javax.swing.JScrollPane();\n        tabelaTarefas = new javax.swing.JTable();\n\n        painelDeBusca.setMaximumSize(new java.awt.Dimension(32767, 100));\n        painelDeBusca.setPreferredSize(new java.awt.Dimension(20, 50));\n\n        btBuscar.setText(\"Buscar\");\n        btBuscar.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btBuscarActionPerformed(evt);\n            }\n        });\n\n        checkResolvidas.setText(\"Resolvidas\");\n\n        javax.swing.GroupLayout painelDeBuscaLayout = new javax.swing.GroupLayout(painelDeBusca);\n        painelDeBusca.setLayout(painelDeBuscaLayout);\n        painelDeBuscaLayout.setHorizontalGroup(\n            painelDeBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(painelDeBuscaLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(painelDeBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(painelDeBuscaLayout.createSequentialGroup()\n                        .addComponent(campoTextoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(26, 26, 26)\n                        .addComponent(btBuscar))\n                    .addComponent(checkResolvidas))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        painelDeBuscaLayout.setVerticalGroup(\n            painelDeBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(painelDeBuscaLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(painelDeBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(campoTextoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(btBuscar))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)\n                .addComponent(checkResolvidas))\n        );\n\n        painelTabela.setLayout(new javax.swing.BoxLayout(painelTabela, javax.swing.BoxLayout.LINE_AXIS));\n\n        tabelaTarefas.setFont(new java.awt.Font(\"Segoe UI\", 0, 14)); // NOI18N\n        tabelaTarefas.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n                {null, null, null, null, null, null},\n                {null, null, null, null, null, null},\n                {null, null, null, null, null, null},\n                {null, null, null, null, null, null}\n            },\n            new String [] {\n                \"ID\", \"ID Universal\", \"Tarefa\", \"Prazo\", \"Comentários\", \"Status\"\n            }\n        ) {\n            Class[] types = new Class [] {\n                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class\n            };\n            boolean[] canEdit = new boolean [] {\n                false, true, true, true, true, true\n            };\n\n            public Class getColumnClass(int columnIndex) {\n                return types [columnIndex];\n            }\n\n            public boolean isCellEditable(int rowIndex, int columnIndex) {\n                return canEdit [columnIndex];\n            }\n        });\n        tabelaTarefas.setRowHeight(30);\n        tabelaTarefas.setRowMargin(4);\n        scrollPaneTabela.setViewportView(tabelaTarefas);\n\n        painelTabela.add(scrollPaneTabela);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(painelDeBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)\n            .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(painelDeBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)\n                .addGap(1, 1, 1))\n        );\n    }// </editor-fold>//GEN-END:initComponents\n\n    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btBuscarActionPerformed\n        String termo = campoTextoBusca.getText();\n        filtraTarefasLPorTit(termo, !checkResolvidas.isSelected());\n    }// GEN-LAST:event_btBuscarActionPerformed\n\n    /**\n     *\n     * @param termo\n     * @param apVenc\n     */\n    private void filtraTarefasLPorTit(String termo, boolean naoFeitas) {\n        // TODO OBS Esse proc parece lento\n        DAOTarefa daoT = new DAOTarefa();\n        List<Tarefa> todasAsTar = daoT.getByTituloAndConcluida(termo, !naoFeitas);\n//\n//        Stream<Tarefa> st = todasAsTar.stream();\n//\n//        st = st.filter(t -> t.getTitulo().toLowerCase().contains(termo.toLowerCase()));\n\n        modeloTabela.setTarefas(todasAsTar);//st.collect(Collectors.toList()));\n        modeloTabela.ordena();\n    }\n\n    private void btSubirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btSubirActionPerformed\n        LOG_PAINEL_T.traceEntry();\n\n        // A linha escolhida na tabela\n        int linhaSel = tabelaTarefas.getSelectedRow();\n\n        // Posição da tarefa no modelo\n        int posicaoSelModelo = tabelaTarefas.convertRowIndexToModel(linhaSel);\n\n        Tarefa tarefaMover = modeloTabela.getTarefas().get(posicaoSelModelo);\n\n        if (tarefaMover.getPosicao() <= 0) {\n            return;\n        }\n\n        LOG_PAINEL_T.debug(\"Pos {} maior que 0\", tarefaMover.getTitulo());\n\n        // Remove a posição dela\n        DAOTarefa daoT = new DAOTarefa();\n\n        Integer posicaoAt = tarefaMover.getPosicao();\n        LOG_PAINEL_T.debug(\"Pos at {}\", posicaoAt);\n\n        Integer posSucMaior = daoT.getMaiorPosicao() + 1;\n        LOG_PAINEL_T.debug(\"Próx m {}\", posSucMaior);\n        tarefaMover.setPosicao(posSucMaior);\n        daoT.atualiza(tarefaMover);\n\n        // Muda a pos da que está na frente pra dela\n        Tarefa tLogoFrente = modeloTabela.getTarefas().get(posicaoSelModelo - 1);// daoT.getByPosicao(posicaoAt - 1);\n\n        if (tLogoFrente == null) {\n            return;\n        }\n\n        LOG_PAINEL_T.debug(\"T acima {} em {}\", tLogoFrente.getTitulo(), posicaoAt - 1);\n\n        tLogoFrente.setPosicao(posicaoAt);\n\n        LOG_PAINEL_T.debug(\"Pos {} alt para {}\", tLogoFrente.getTitulo(), posicaoAt);\n\n        /*\n         * Aqui seria importante recarregar a tarefa do banco na tabela da janela\n         * principal\n         * \n         */\n        daoT.atualiza(tLogoFrente);\n\n        tarefaMover.setPosicao(posicaoAt - 1);\n        daoT.atualiza(tarefaMover);\n\n        // modeloTabela.setTarefas(daoT.listaTodas());\n        modeloTabela.ordena();\n\n        /**\n         * Após a ordenação a seleção é perdida\n         *\n         */\n        ListSelectionModel modeloSelecao = tabelaTarefas.getSelectionModel();\n\n        /**\n         * Importante não ser duplicada\n         */\n        int idxNovoModelo = modeloTabela.getTarefas().indexOf(tarefaMover);\n\n        LOG_PAINEL_T.debug(\"Novo índice tarefa modelo: {}\", idxNovoModelo);\n\n        int idxTabela = tabelaTarefas.convertRowIndexToView(idxNovoModelo);\n\n        LOG_PAINEL_T.debug(\"Novo índice tarefa tabela: {}\", idxTabela);\n\n        /**\n         * O parâmetro é o índice na tabela\n         */\n        modeloSelecao.setSelectionInterval(idxTabela, idxTabela);\n    }// GEN-LAST:event_btSubirActionPerformed\n\n    private void btDescerActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btDescerActionPerformed\n        LOG_PAINEL_T.traceEntry();\n\n        Tarefa tarefasDescer = modeloTabela.getTarefas()\n                .get(tabelaTarefas.convertRowIndexToModel(tabelaTarefas.getSelectedRow()));\n\n        if (tarefasDescer.getPosicao() >= modeloTabela.getTarefas().size() - 1) {\n            return;\n        }\n\n        Integer posicaoAt = tarefasDescer.getPosicao();\n\n        if (tarefasDescer.getPosicao() < modeloTabela.getTarefas().size() - 1) {\n            tarefasDescer.setPosicao(tarefasDescer.getPosicao() + 1);\n            LOG_PAINEL_T.debug(\"Pos alt para \" + tarefasDescer.getPosicao());\n        }\n\n        // Remove a pos\n        DAOTarefa daoT = new DAOTarefa();\n\n        tarefasDescer.setPosicao(daoT.getMaiorPosicao() + 1);\n        daoT.atualiza(tarefasDescer);\n\n        LOG_PAINEL_T.debug(\"Tarefa movida para o fim. Pos: \" + tarefasDescer.getPosicao());\n\n        // TODO: Trocar posição da de baixo com a dela\n        Tarefa tarAbaixo = daoT.getByPosicao(posicaoAt + 1);\n        if (tarAbaixo != null) {\n            LOG_PAINEL_T.debug(\"Tarefa enc pos seg. pos: \" + (posicaoAt + 1));\n            tarAbaixo.setPosicao(posicaoAt);\n\n            daoT.atualiza(tarAbaixo);\n        }\n\n        // TODO: Rever ter se galhar\n        tarefasDescer.setPosicao(posicaoAt + 1);\n        daoT.atualiza(tarefasDescer);\n\n        modeloTabela.ordena();\n\n        /**\n         * Após a ordenação a seleção é perdida\n         *\n         */\n        ListSelectionModel modeloSelecao = tabelaTarefas.getSelectionModel();\n\n        /**\n         * Importante não ser duplicada\n         */\n        int idxNovoModelo = modeloTabela.getTarefas().indexOf(tarefasDescer);\n\n        LOG_PAINEL_T.debug(\"Novo índice tarefa modelo: {}\", idxNovoModelo);\n\n        int idxTabela = tabelaTarefas.convertRowIndexToView(idxNovoModelo);\n\n        LOG_PAINEL_T.debug(\"Novo índice tarefa tabela: {}\", idxTabela);\n\n        /**\n         * O parâmetro é o índice na tabela\n         */\n        modeloSelecao.setSelectionInterval(idxTabela, idxTabela);\n    }// GEN-LAST:event_btDescerActionPerformed\n\n    public JTable getTabelaTarefas() {\n        return tabelaTarefas;\n    }\n\n    public ButtonGroup getGrupoDataAgFiltr() {\n        return grupoDataAgFiltr;\n    }\n\n    public JButton getBtBuscar() {\n        return btBuscar;\n    }\n\n    public void setBtBuscar(JButton btBuscar) {\n        this.btBuscar = btBuscar;\n    }\n\n    public JTextField getCampoTextoBusca() {\n        return campoTextoBusca;\n    }\n\n    public void setCampoTextoBusca(JTextField campoTextoBusca) {\n        this.campoTextoBusca = campoTextoBusca;\n    }\n\n    public ModeloTabelaTarefasLista getModeloTabela() {\n        return modeloTabela;\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton btBuscar;\n    private javax.swing.JTextField campoTextoBusca;\n    private javax.swing.JCheckBox checkResolvidas;\n    private javax.swing.ButtonGroup grupoDataAgFiltr;\n    private javax.swing.JPanel painelDeBusca;\n    private javax.swing.JPanel painelTabela;\n    private javax.swing.JScrollPane scrollPaneTabela;\n    private javax.swing.JTable tabelaTarefas;\n    // End of variables declaration//GEN-END:variables\n}\n"
        }
    ]
}