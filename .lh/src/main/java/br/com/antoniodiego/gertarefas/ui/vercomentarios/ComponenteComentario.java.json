{
    "sourceFile": "src/main/java/br/com/antoniodiego/gertarefas/ui/vercomentarios/ComponenteComentario.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751340800159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751340800159,
            "name": "Commit-0",
            "content": "/*\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template\n */\npackage br.com.antoniodiego.gertarefas.ui.vercomentarios;\n\nimport br.com.antoniodiego.gertarefas.pojo.Comentario;\nimport java.awt.Color;\nimport java.awt.Dimension;\nimport java.awt.Font;\nimport java.awt.FontMetrics;\nimport java.awt.Graphics;\nimport java.awt.Graphics2D;\nimport java.awt.Panel;\nimport java.awt.geom.Rectangle2D;\nimport java.awt.geom.RoundRectangle2D;\nimport java.time.format.DateTimeFormatter;\nimport java.util.List;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\nimport org.davidmoten.text.utils.WordWrap;\n\n/**\n *\n * @author anton\n */\npublic class ComponenteComentario extends Panel {\n\n    Dimension prefSize = new Dimension(100, 300);\n\n    Comentario c;\n\n    Font f = new Font(\"Dialog\", Font.PLAIN, 12);\n    Color foreg = new Color(51, 51, 51);\n\n    public static final Logger LOG_C_RENDERER = LogManager.\n            getLogger(\"coment_renderer\");\n\n    public ComponenteComentario(int index, Comentario c) {\n        this.c = c;\n        setFont(f);\n\n    }\n\n    int marginLeft = 10;\n    int marginRight = 10;\n\n    public void setaAltura(int width) {\n        String comentario = c.getComentario();\n\n        int largura = width - (marginLeft + marginRight);\n\n        if (largura < 0) {\n            return;\n        }\n\n        System.out.println(\"Largura setA: \" + (largura - 10));\n\n        FontMetrics fm = getFontMetrics(f);\n        List<String> linhasComent = WordWrap.from(comentario).\n                breakWords(true).\n                maxWidth(largura - 10).stringWidth((str) -> {\n            return fm.stringWidth(str.toString());\n        }).wrapToList();\n\n        //   System.out.println(\"Total linhas sA: \" + linhasComent.size());\n        //Altura da região para os comnentários\n        int alturaRegiao = (fm.getHeight() + 4) * linhasComent.size();\n\n        // LOG_C_RENDERER.debug(\"altura reg: \" + alturaRegiao);\n        int alturaRetangulo = 10 + 20 + alturaRegiao + 10;\n\n        //  LOG_C_RENDERER.debug(\"Nova altura: \" + alturaRetangulo);\n        super.setBounds(getX(), getY(), getWidth(), alturaRetangulo);\n    }\n\n    @Override\n    public void setBounds(int x, int y, int width, int height) {\n        System.out.println(\"Set b wh\");\n        System.out.println(\"Chamando superSetBounds\");\n        super.setBounds(x, y, width, height);\n        LOG_C_RENDERER.debug(\"Larg: {}, Altura: {}, x: {}, y: {}\", width,\n                height,\n                x, y);\n\n        System.out.println(\"Chamando setAltura\");\n        setaAltura(width);\n\n    }\n\n    @Override\n    public void paint(Graphics g) {\n        LOG_C_RENDERER.traceEntry();\n\n        Graphics2D g2d = (Graphics2D) g;\n        g2d.setColor(Color.black);\n\n        LOG_C_RENDERER.debug(\"p. Larg: {}, Altura: {}\", getWidth(),\n                getHeight());\n\n        //    System.out.println(\"Largura paint: \" + (largura - 10));\n        int largura = getWidth() - (marginLeft + marginRight);\n\n        RoundRectangle2D retanguloCabecalho = new RoundRectangle2D.Float(marginLeft,\n                10, largura,\n                20, 10, 10);\n\n        g2d.draw(retanguloCabecalho);\n        g2d.setColor(Color.lightGray);\n        g2d.fill(retanguloCabecalho);\n\n        String comentario = c.getComentario();\n\n        System.out.println(\"Largura paint: \" + (largura - 10));\n        FontMetrics fm = getFontMetrics(f);\n        List<String> linhasComent = WordWrap.from(comentario).\n                breakWords(true).\n                maxWidth(largura - 10).stringWidth((str) -> {\n            return fm.stringWidth(str.toString());\n        }).wrapToList();\n\n        System.out.println(\"Total linhas paint: \" + linhasComent.size());\n        //Altura da região para os comnentários\n//            int alturaRegiao = (fm.getHeight() + 4) * linhasComent.size();\n//            int alturaRetangulo = 10 + 20 + alturaRegiao + 10;\n//            \n//            setPreferredSize(new Dimension(getWidth(), alturaRetangulo));\n\n        // System.out.println(\"Altura: \" + (alturaRet));\n        //Margem superior 10 e inferior 10\n        RoundRectangle2D retanguloCorpo = new RoundRectangle2D.Float(marginLeft,\n                10, largura,\n                getHeight() - 20, 10, 10);\n\n        g2d.setColor(Color.black);\n        g2d.draw(retanguloCorpo);\n\n        String s = c.getDataComentario().\n                format(DateTimeFormatter.ISO_LOCAL_DATE)\n                + \"  \" + c.getHora().\n                        format(DateTimeFormatter.ISO_LOCAL_TIME);\n        g2d.setFont(f);\n        g2d.setColor(foreg);\n        g2d.drawString(s,\n                marginLeft + 5, 12+fm.getAscent());\n\n        int yBaseline = 34 + fm.getAscent();\n        //    g2d.drawLine(10, yBaseline, largura, yBaseline);\n\n//        System.out.println(g2d.getFont());\n//        System.out.println(g2d.getFont().getStyle());\n        for (String linha : linhasComent) {\n            System.out.println(\"Desenhando linha: \" + linha);\n\n            g2d.drawString(linha, marginLeft + 5,\n                    yBaseline);\n            yBaseline += 4 + fm.getAscent();\n        }\n\n//        g2d.setColor(Color.red);\n//        g2d.draw(new Rectangle2D.Float(0, 0, getWidth() - 1, getHeight() - 1));\n    }\n\n    @Override\n    public void setPreferredSize(Dimension preferredSize) {\n        System.out.println(\"Set psize\");\n        this.prefSize = preferredSize;\n\n    }\n\n    @Override\n    public Dimension getPreferredSize() {\n        LOG_C_RENDERER.debug(\"Ger p s\");\n        return prefSize;\n    }\n\n    @Override\n    public String toString() {\n        return this.c.getComentario();\n    }\n\n}\n"
        }
    ]
}