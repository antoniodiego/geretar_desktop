{
    "sourceFile": "src/main/java/br/com/antoniodiego/gertarefas/ui/renderers/RenderizadorGT.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751340800157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751340800157,
            "name": "Commit-0",
            "content": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage br.com.antoniodiego.gertarefas.ui.renderers;\n\nimport br.com.antoniodiego.gertarefas.pojo.GrupoTarefas;\nimport br.com.antoniodiego.gertarefas.pojo.Tarefa;\nimport br.com.antoniodiego.gertarefas.pojo.TarefaComposta;\nimport java.awt.Component;\nimport java.time.LocalDate;\nimport java.util.List;\nimport javax.swing.ImageIcon;\nimport javax.swing.JTree;\nimport javax.swing.tree.DefaultMutableTreeNode;\nimport javax.swing.tree.DefaultTreeCellRenderer;\n\n/**\n *\n * @author Ant?nio Diego- Comp:Ant?nio Diego <your.name at your.org>\n */\npublic class RenderizadorGT extends DefaultTreeCellRenderer {\n\n    private final ImageIcon iconeFeita;\n    private final ImageIcon iconeAtrasada;\n    private final ImageIcon iconeFazer;\n    private final ImageIcon iconeGrupo;\n    private final ImageIcon iconeGrupoCon;\n    private final ImageIcon iconeGrupoAtr;\n\n    public RenderizadorGT() {\n        iconeFeita = new ImageIcon(getClass().getResource(\"/imagens/icone_concluida.png\"));\n        iconeAtrasada = new ImageIcon(getClass().getResource(\"/imagens/tarefa atrasada.png\"));\n        iconeFazer = new ImageIcon(getClass().getResource(\"/imagens/nao feita.png\"));\n        iconeGrupo = new ImageIcon(getClass().getResource(\"/imagens/icone_grupo.png\"));\n        iconeGrupoCon = new ImageIcon(getClass().getResource(\"/imagens/icone_grupo_conc.png\"));\n        iconeGrupoAtr = new ImageIcon(getClass().getResource(\"/imagens/grupo_tar_atrasada.png\"));\n\n    }\n\n    @Override\n    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n        super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);\n        //    System.out.println(\"cv: \"+value.getClass());\n        Object ov;\n        if (value instanceof DefaultMutableTreeNode) {\n            DefaultMutableTreeNode no = (DefaultMutableTreeNode) value;\n            ov = no.getUserObject();\n        } else {\n            ov = value;\n        }\n\n        if (ov instanceof TarefaComposta) {\n            TarefaComposta t = (TarefaComposta) ov;\n            if (t.isConcluida()) {\n                setIcon(iconeFeita);\n            } else if (t.getDataFazer() != null && t.getDataFazer().isBefore(LocalDate.now())) {//before(new Date())) {\n                setIcon(iconeAtrasada);\n            } else {\n                setIcon(iconeFazer);\n            }\n        } else if (ov instanceof GrupoTarefas) {\n            //PENDING: Ícone grupo aberto\n            int est = analisaGrupo((GrupoTarefas) ov);\n            switch (est) {\n                case 1:\n                    setIcon(iconeGrupo);\n                    break;\n                case 0:\n                    setIcon(iconeGrupoCon);\n                    break;\n                case 2:\n                    setIcon(iconeGrupoAtr);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return this;\n    }\n\n    //TODO: Usar eneum\n    /**\n     *\n     * @return 0 se estiver em dia, 1 se contiver tarefa para fa e 2 se tiver\n     * atrasada\n     */\n    private int analisaGrupo(GrupoTarefas g) {\n        Enum r = null;\n        //Assume está em dia. Atras pior\n        //    int retorno = 0;\n        List<GrupoTarefas> gs = g.getSubgrupos();\n        boolean temTarF = false;\n        for (GrupoTarefas gr : gs) {\n            //Analisa sub\n            int res = analisaGrupo(gr);\n            if (res == 2) {\n                //Muito gr\n                return res;\n            } else if (res == 1) {\n                temTarF = true;\n            }\n            //Tranquilo continu se 0\n        }\n\n        List<Tarefa> tars = g.getTarefas();\n\n        for (Tarefa t : tars) {\n            if (!t.isConcluida()) {\n                if (t.getDataFazer() != null) {\n                    //Não conc e tem uma data fazer\n                    if (t.getDataFazer().isBefore(LocalDate.now())) {\n                        //Atrasou\n                        return 2;\n                    }\n                } else {\n                    //Não con sem data f\n                    temTarF = true;\n                }\n            }\n            //Se for con cont\n        }\n\n        //Se chegou aqui não tem atras\n    //    System.out.println(\"Nenhuma atras\");\n        if (temTarF) {\n       //     System.out.println(\"Alguma faz\");\n            return 1;\n        }\n\n        //System.out.println(\"Gr em dia\");\n        //Não enc para faz nem atras. Em dia!\n        return 0;\n    }\n}\n"
        }
    ]
}