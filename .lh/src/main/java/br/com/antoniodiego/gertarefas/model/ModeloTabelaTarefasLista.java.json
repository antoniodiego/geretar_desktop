{
    "sourceFile": "src/main/java/br/com/antoniodiego/gertarefas/model/ModeloTabelaTarefasLista.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1751340800141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751341836203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n package br.com.antoniodiego.gertarefas.model;\n \n-import br.com.antoniodiego.gertarefas.persist.daos.DAOTarefa;\n+import br.com.antoniodiego.gertarefas.persist.DAOTarefa;\n import br.com.antoniodiego.gertarefas.pojo.Tarefa;\n import br.com.antoniodiego.gertarefas.util.FuncoesTarefas;\n import br.com.antoniodiego.gertarefas.util.Utilid;\n \n"
                },
                {
                    "date": 1751341873093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n package br.com.antoniodiego.gertarefas.model;\n \n import br.com.antoniodiego.gertarefas.persist.DAOTarefa;\n import br.com.antoniodiego.gertarefas.pojo.Tarefa;\n-import br.com.antoniodiego.gertarefas.util.FuncoesTarefas;\n+import br.com.antoniodiego.gertarefas.util.TarefaService;\n import br.com.antoniodiego.gertarefas.util.Utilid;\n \n import static br.com.antoniodiego.gertarefas.ui.principal.paineis.PainelTabelaTarefas.LOG_PAINEL_T;\n \n@@ -175,9 +175,9 @@\n                 tarefaLinha.setConcluida((boolean) aValue);\n                 tarefaLinha.setDataModif(LocalDateTime.now());\n                 break;\n             case 8:\n-                FuncoesTarefas.alteraPosicao(tarefaLinha, (int) aValue);\n+                TarefaService.alteraPosicao(tarefaLinha, (int) aValue);\n                 tarefaLinha.setDataModif(LocalDateTime.now());\n                 //atualizar posições no modelo\n \n                 LOG_MODELO.debug(\"Recarregando tarefas...\");\n"
                },
                {
                    "date": 1751341901758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n package br.com.antoniodiego.gertarefas.model;\n \n import br.com.antoniodiego.gertarefas.persist.DAOTarefa;\n import br.com.antoniodiego.gertarefas.pojo.Tarefa;\n-import br.com.antoniodiego.gertarefas.util.TarefaService;\n+import br.com.antoniodiego.gertarefas.service.TarefaService;\n import br.com.antoniodiego.gertarefas.util.Utilid;\n \n import static br.com.antoniodiego.gertarefas.ui.principal.paineis.PainelTabelaTarefas.LOG_PAINEL_T;\n \n"
                }
            ],
            "date": 1751340800141,
            "name": "Commit-0",
            "content": "package br.com.antoniodiego.gertarefas.model;\n\nimport br.com.antoniodiego.gertarefas.persist.daos.DAOTarefa;\nimport br.com.antoniodiego.gertarefas.pojo.Tarefa;\nimport br.com.antoniodiego.gertarefas.util.FuncoesTarefas;\nimport br.com.antoniodiego.gertarefas.util.Utilid;\n\nimport static br.com.antoniodiego.gertarefas.ui.principal.paineis.PainelTabelaTarefas.LOG_PAINEL_T;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.List;\nimport javax.swing.JTable;\n\nimport javax.swing.table.AbstractTableModel;\nimport javax.swing.table.TableColumn;\nimport javax.swing.table.TableRowSorter;\nimport net.minidev.json.JSONObject;\nimport net.minidev.json.parser.JSONParser;\nimport net.minidev.json.parser.ParseException;\n\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\n/**\n * * Esse modelo é usado para exibir as tarefas na tabela que fica no centro da\n * janela principal\n *\n * @author Antônio Diego <antoniodiegoluz at gmail.com>\n */\npublic class ModeloTabelaTarefasLista extends AbstractTableModel {\n\n    private static final Logger LOG_MODELO = LogManager.\n            getLogger(\"log_modelo\");\n\n    /**\n     * Colunas da tabela\n     */\n    private static final String[] COLUNAS = new String[]{\"ID\", \"ID Pers\",\n        \"Título\",\n        \"Data de criação\", \"Prioridade\", \"Data fazer\", \"Data modif\",\n        \"Concluída\",\n        \"Posição\", \"Comentário\", \"Status\"};\n\n    public static final Class[] CLASSES_COLUNAS = new Class[]{Long.class,\n        Long.class,\n        String.class,\n        LocalDate.class, Integer.class, LocalDate.class, LocalDateTime.class,\n        Boolean.class, Integer.class, String.class, String.class};\n\n    private List<Tarefa> tarefas;\n    //  private final JanelaPrincipalController contr;\n    public static final Boolean[] EDITAVEL = new Boolean[]{false, true, true,\n        false,\n        true, true, false, true, true, true, true};\n    private final JTable tabelaTarefas;\n\n    /**\n     *\n     * @param tabelaTarefas\n     */\n    public ModeloTabelaTarefasLista(JTable tabelaTarefas) {\n        tarefas = new ArrayList<>();\n        this.tabelaTarefas = tabelaTarefas;\n    }\n\n    @Override\n    public int getRowCount() {\n        return tarefas.size();\n    }\n\n    @Override\n    public Class<?> getColumnClass(int columnIndex) {\n        return CLASSES_COLUNAS[columnIndex];\n    }\n\n    @Override\n    public String getColumnName(int column) {\n        return COLUNAS[column];\n    }\n\n    @Override\n    public int getColumnCount() {\n        return COLUNAS.length;\n    }\n\n    @Override\n    public boolean isCellEditable(int rowIndex, int columnIndex) {\n        return EDITAVEL[columnIndex];\n    }\n\n    @Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n        Tarefa tarefaLinha = tarefas.get(rowIndex);\n        switch (columnIndex) {\n            case 0:\n                return tarefaLinha.getId();\n            case 1:\n                return tarefaLinha.getIdPers();\n            case 2:\n                return tarefaLinha.getTitulo();\n            case 3:\n                return tarefaLinha.getDataCriacao();\n            //  case 3:\n            // return tarefaLinha.getDataCriacao();\n            case 4:\n                return tarefaLinha.getPrioridade();\n            case 5:\n                return tarefaLinha.getDataFazer();\n            case 6:\n                return tarefaLinha.getDataModif();\n            case 7:\n                return tarefaLinha.isConcluida();\n            case 8:\n                return tarefaLinha.getPosicao();\n            case 9:\n                return tarefaLinha.getComentario();\n            case 10:\n                return tarefaLinha.getStatus();\n\n            default:\n                //TODO: poderia ser lan uma excessão\n                return null;\n        }\n    }\n\n    @Override\n    public void setValueAt(Object aValue, int rowIndex, int columnIndex) {\n        Tarefa tarefaLinha = tarefas.get(rowIndex);\n\n        LOG_MODELO.debug(\"Posição: \" + tarefaLinha.getPosicao());\n//\n//        Session s = DAO.getSession();\n//\n//        s.getTransaction().begin();\n//        Tarefa tC = s.get(Tarefa.class, tarefaLinha.getId());\n//        s.getTransaction().commit();\n//\n//        tarefaLinha = tC;\n//\n//        LOG_MODELO.debug(\"Posição carregada: \" + tarefaLinha.getPosicao());\n//\n//        this.tarefas.set(rowIndex, tC);\n//        fireTableRowsUpdated(rowIndex, rowIndex);\n        switch (columnIndex) {\n            case 0:\n                //tarefaLinha.setId((Long) aValue);\n                break;\n            case 1:\n                tarefaLinha.setIdPers((Long) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                break;\n            case 2:\n                tarefaLinha.setTitulo((String) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                break;\n            case 3:\n                break;\n            case 4:\n                tarefaLinha.setPrioridade((Integer) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                break;\n            case 5:\n                tarefaLinha.setDataFazer((LocalDate) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                break;\n            case 6:\n                break;\n            case 7:\n                tarefaLinha.setConcluida((boolean) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                break;\n            case 8:\n                FuncoesTarefas.alteraPosicao(tarefaLinha, (int) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                //atualizar posições no modelo\n\n                LOG_MODELO.debug(\"Recarregando tarefas...\");\n                DAOTarefa daoT = new DAOTarefa();\n                daoT.atualiza(tarefaLinha);\n\n                List<Tarefa> todas = daoT.listaTodas();\n                setTarefas(todas);\n                ordena();\n\n                break;\n            case 9:\n                tarefaLinha.setComentario((String) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                break;\n            case 10:\n                tarefaLinha.setStatus((String) aValue);\n                tarefaLinha.setDataModif(LocalDateTime.now());\n                break;\n        }\n\n        LOG_MODELO.debug(\"Indíce coluna: \" + columnIndex);\n        LOG_MODELO.debug(\"Atualizando tarefa no banco...\");\n        LOG_MODELO.debug(\"Posição: \" + tarefaLinha.getPosicao());\n\n        DAOTarefa daoT = new DAOTarefa();\n        daoT.atualiza(tarefaLinha);\n\n        ((TableRowSorter) tabelaTarefas.getRowSorter()).sort();\n\n        //  int idx = tarefas.indexOf(tarefaLinha);\n//        Utilid.persisteInfoTabela(tabelaTarefas);\n//       \n//\n//        Utilid.carregaInfoTabela(tabelaTarefas);\n//        /*Nessa chamada de método a alteração do id pode falhar.\n//        \n//         */\n//        contr.getDaoUsuario().flush();\n    }\n\n    /**\n     * Adiciona uma nova tarefa no modelo da tabela\n     *\n     * @param tar\n     */\n    public void adicionaTarefa(Tarefa tar) {\n        this.tarefas.add(tar);\n        fireTableRowsInserted(tarefas.size() - 1, tarefas.size() - 1);\n    }\n\n    public void removeTarefa(int idx) {\n        tarefas.remove(idx);\n        fireTableRowsDeleted(idx, idx);\n    }\n\n    public void setTarefas(List<Tarefa> tarefas) {\n        this.tarefas = tarefas;\n        //  Utilid.persisteInfoTabela(tabelaTarefas);\n        fireTableDataChanged();\n        //  Utilid.carregaInfoTabela(tabelaTarefas);\n\n    }\n\n    public void ordena(Comparator<Tarefa> comp) {\n        this.tarefas.sort(comp);\n        fireTableDataChanged();\n        //   Utilid.carregaInfoTabela(tabelaTarefas);\n    }\n\n    public List<Tarefa> getTarefas() {\n        return tarefas;\n    }\n\n    public void ordena() {\n        Comparator<Tarefa> comp = (Tarefa o1, Tarefa o2) -> {\n            if (o1.getPosicao() != null && o2.getPosicao() != null) {\n\n                int resultComp = o1.getPosicao().compareTo(o2.getPosicao());\n                return resultComp;\n                //LOG_MODELO.traceExit(\"Compare n n\", resultComp);\n            }\n\n            if (o1.getPosicao() == null && o2.getPosicao() == null) {\n                return 0;//LOG_MODELO.traceExit(\"2 n\", 0);\n            } else if (o1.getPosicao() == null) {\n                return 1;//LOG_MODELO.traceExit(\"1 n\", 1);\n            } else if (o2.getPosicao() == null) {\n                return -1;//LOG_MODELO.traceExit(\"2 n\", -1);\n            }\n\n            return 0;\n        };\n        this.tarefas.sort(comp);\n        fireTableDataChanged();\n        //Utilid.carregaInfoTabela(tabelaTarefas);\n\n    }\n\n    /**\n     *\n     */\n    public void recarregaTarefasBanco() {\n        DAOTarefa daoT = new DAOTarefa();\n\n        //TODO: PaginaÃ§Ã£o\n        List<Tarefa> tarefasBanco = daoT.listaTodas();\n        this.tarefas.clear();\n        this.tarefas.addAll(tarefasBanco);\n        ordena();\n        fireTableDataChanged();\n    }\n\n}\n"
        }
    ]
}