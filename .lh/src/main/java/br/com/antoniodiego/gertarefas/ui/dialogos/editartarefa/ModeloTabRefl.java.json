{
    "sourceFile": "src/main/java/br/com/antoniodiego/gertarefas/ui/dialogos/editartarefa/ModeloTabRefl.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751340800149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751340800149,
            "name": "Commit-0",
            "content": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage br.com.antoniodiego.gertarefas.ui.dialogos.editartarefa;\n\nimport br.com.antoniodiego.gertarefas.pojo.Reflexao;\nimport java.time.LocalDate;\nimport java.time.LocalTime;\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.swing.table.AbstractTableModel;\n\n/**\n *\n * @author Antônoio Diego <antoniodiegoluz at gmail.com>\n */\npublic class ModeloTabRefl extends AbstractTableModel {\n\n    private static final String[] COLUNAS = new String[]{\"Data\", \"Hora\", \"Reflexão\"};\n\n    private List<Reflexao> ref;\n\n    public ModeloTabRefl() {\n        ref = new ArrayList<>();\n    }\n\n    @Override\n    public String getColumnName(int column) {\n        return COLUNAS[column];\n    }\n\n    @Override\n    public int getRowCount() {\n        return ref.size();\n    }\n\n    @Override\n    public int getColumnCount() {\n        return COLUNAS.length;\n    }\n\n    @Override\n    public boolean isCellEditable(int rowIndex, int columnIndex) {\n        return true;\n    }\n\n    @Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n        System.out.println(\"getVAt\");\n        Reflexao refL = ref.get(rowIndex);\n        switch (columnIndex) {\n            case 0:\n                return refL.getDataCriacao();\n            case 1:\n                return refL.getHora();\n            case 2:\n                return refL.getTexto();\n            default:\n                return null;\n        }\n    }\n\n    @Override\n    public void setValueAt(Object aValue, int rowIndex, int columnIndex) {\n        Reflexao refL = ref.get(rowIndex);\n        switch (columnIndex) {\n            case 0:\n                refL.setDataCriacao((LocalDate) aValue);\n            case 1:\n                refL.setHora((LocalTime) aValue);\n            case 2:\n                refL.setTexto((String) aValue);\n        }\n    }\n\n    public void setRef(List<Reflexao> ref) {\n        this.ref = ref;\n        fireTableDataChanged();\n    }\n\n    public void notificaAdic() {\n        int posU =ref.size()-1;\n        fireTableRowsInserted(posU,posU);\n    }\n\n     public void notificaRem(int idx) {\n         fireTableRowsDeleted(idx, idx);\n    }\n     \n    public List<Reflexao> getRef() {\n        return ref;\n    }\n\n}\n"
        }
    ]
}