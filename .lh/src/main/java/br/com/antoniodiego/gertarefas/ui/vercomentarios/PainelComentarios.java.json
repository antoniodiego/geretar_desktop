{
    "sourceFile": "src/main/java/br/com/antoniodiego/gertarefas/ui/vercomentarios/PainelComentarios.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751340800158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751340800158,
            "name": "Commit-0",
            "content": "/*\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\n * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template\n */\npackage br.com.antoniodiego.gertarefas.ui.vercomentarios;\n\nimport br.com.antoniodiego.gertarefas.pojo.Comentario;\nimport java.awt.Color;\nimport java.awt.Dimension;\nimport java.awt.Graphics;\nimport java.awt.Rectangle;\nimport java.awt.event.MouseAdapter;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseMotionListener;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport javax.swing.Scrollable;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\n/**\n * Usa a mesma lista de comentários da tarefa\n *\n * @author anton\n */\npublic class PainelComentarios extends javax.swing.JPanel implements Scrollable, MouseMotionListener {\n\n    private List<Comentario> coment;\n    private final List<ComponenteComentario> subComponentes;\n    public static final Logger LOG_C_RENDERER = LogManager.\n            getLogger(\"painel_c\");\n\n    /**\n     * Creates new form PainelComentarios\n     *\n     */\n    public PainelComentarios() {\n        initComponents();\n\n        subComponentes = new ArrayList<>();\n        this.coment = new ArrayList<>();\n        //  setSize(getWidth(), 500);\n\n        //     addMouseListener(new Adap());\n        // addMouseMotionListener(this);\n    }\n\n    /**\n     *  * Usa a mesma lista de comentários da tarefa\n     *\n     * @param coment\n     */\n    public void setComent(List<Comentario> coment) {\n        LOG_C_RENDERER.debug(\"Set c\");\n\n        LOG_C_RENDERER.debug(\"W: \" + getWidth());\n\n        //TODO: Usar a mesma lista da tarefa\n        //   this.coment.clear();\n        //    this.coment.addAll(coment);\n        this.coment = coment;\n        Collections.sort(coment);\n\n        int altura = 10;\n\n        // coment = coment.subList(0, 3);\n         ComponenteComentario cc;\n        for (Comentario c : coment) {\n           cc = new ComponenteComentario(0, c);\n            cc.setaAltura(getWidth());\n            //   subComponentes.add(cc);\n\n            altura += cc.getHeight() + 10;\n        }\n\n        this.setPreferredSize(new Dimension(getWidth(), altura));\n        LOG_C_RENDERER.debug(\"Altura painel: \" + altura);\n\n        revalidate();\n        repaint();\n\n        this.scrollRectToVisible(new Rectangle(0, altura + 50, getWidth(), 50));\n    }\n\n    public void add(Comentario c) {\n        LOG_C_RENDERER.traceEntry();\n\n        //  if (!coment.contains(c)) {\n        //   this.coment.add(c);\n        //    }\n        LOG_C_RENDERER.debug(\"Total coment: \" + coment.size());\n\n        Collections.sort(coment);\n\n        ComponenteComentario cc = new ComponenteComentario(0, c);\n        cc.setaAltura(getWidth());\n        //  subComponentes.add(cc);\n\n        this.setPreferredSize(new Dimension(getWidth(), getHeight()\n                + cc.getHeight() + 10));\n        //System.out.println(\"Altura painel: \" + altura);\n\n        cc.setLocation(0, getHeight()\n                + cc.getHeight() + 10 + 50);\n\n        revalidate();\n        repaint();\n\n        this.scrollRectToVisible(cc.getBounds());\n    }\n\n    @Override\n    public void setBounds(int x, int y, int width, int height) {\n        super.setBounds(x, y, width, height);\n        LOG_C_RENDERER.debug(\"S b painel , larg {}: \", width);\n    }\n\n    /**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 345, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 300, Short.MAX_VALUE)\n        );\n    }// </editor-fold>//GEN-END:initComponents\n\n    @Override\n    protected void paintComponent(Graphics g) {\n        g.setColor(Color.WHITE);\n        g.fillRect(0, 0, getWidth(), getHeight());\n\n        LOG_C_RENDERER.debug(\"Largura pc: \" + getWidth());\n\n        System.out.println(\"Desen \" + coment.size() + \" comentários\");\n//        g.setColor(Color.GREEN);\n//        g.drawRect(0, 0, getWidth() - 1, getHeight() - 1);\n        int yC = 10;\n        Graphics gC;\n        for (Comentario com : coment) {\n            ComponenteComentario c = new ComponenteComentario(0, com);\n            System.out.println(\"Des : \" + c + \" pos y \" + yC);\n            c.setaAltura(getWidth());\n            c.setBounds(0, yC, getWidth(), c.getHeight());\n            gC = g.create(0, yC, c.getWidth(), c.getHeight());\n            c.paint(gC);\n            yC += c.getHeight() + 10;\n        }\n    }\n\n    @Override\n    public Dimension getPreferredScrollableViewportSize() {\n        return new Dimension(400, getHeight());\n    }\n\n    @Override\n    public int getScrollableUnitIncrement(Rectangle visibleRect, int orientation, int direction) {\n        return 50;\n    }\n\n    @Override\n    public int getScrollableBlockIncrement(Rectangle visibleRect, int orientation, int direction) {\n        return 50;\n    }\n\n    @Override\n    public boolean getScrollableTracksViewportWidth() {\n        return true;\n    }\n\n    @Override\n    public boolean getScrollableTracksViewportHeight() {\n        return false;\n    }\n\n    @Override\n    public void mouseDragged(MouseEvent e) {\n        System.out.println(\"mouse dra list: \" + e.getPoint());\n        Rectangle c = new Rectangle(e.getPoint(), new Dimension(1, 1));\n        scrollRectToVisible(c);\n    }\n\n    @Override\n    public void mouseMoved(MouseEvent e) {\n        System.out.println(\"mouse mov list: \" + e.getPoint());\n        Rectangle c = new Rectangle(e.getPoint(), new Dimension(1, 1));\n        scrollRectToVisible(c);\n    }\n\n    private class Adap extends MouseAdapter {\n\n        @Override\n        public void mouseMoved(MouseEvent e) {\n            System.out.println(\"mouse mov ad\");\n            Rectangle c = new Rectangle(e.getPoint(), new Dimension(1, 1));\n            scrollRectToVisible(c);\n        }\n\n        @Override\n        public void mouseDragged(MouseEvent e) {\n            System.out.println(\"mouse dra ad\");\n            Rectangle c = new Rectangle(e.getPoint(), new Dimension(1, 1));\n            scrollRectToVisible(c);\n        }\n    }\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    // End of variables declaration//GEN-END:variables\n}\n"
        }
    ]
}