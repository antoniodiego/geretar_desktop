/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.antoniodiego.gertarefas.telas.principal.paineis;

import br.com.antoniodiego.gertarefas.model.ModeloTabelaTarefasLista;
import br.com.antoniodiego.gertarefas.persist.daos.DAOTarefa;
import br.com.antoniodiego.gertarefas.pojo.Tarefa;
import br.com.antoniodiego.gertarefas.telas.dialogos.editartarefa.DialogoEditarTarefa;
import static br.com.antoniodiego.gertarefas.telas.principal.paineis.PainelTabelaTarefas.LOG_PAINEL_T;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Antônoio Diego <antoniodiegoluz at gmail.com>
 */
public class PainelFuncoes extends javax.swing.JPanel {

    private ModeloTabelaTarefasLista modeloTabela;
    private JTable tabelaTarefas;
    private JFrame dono;

    /**
     * Creates new form PainelFuncoes
     *
     */
    public PainelFuncoes() {

        initComponents();
    }

    /**
     * Creates new form PainelFuncoes
     *
     * @param painelTabelaTarefas
     * @param dono
     */
    public PainelFuncoes(PainelTabelaTarefas painelTabelaTarefas, JFrame dono) {
        this.dono = dono;

        this.modeloTabela = painelTabelaTarefas.getModeloTabela();
        this.tabelaTarefas = painelTabelaTarefas.getTabelaTarefas();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btAumentPrio = new javax.swing.JButton();
        btDiminuiPrio = new javax.swing.JButton();
        btSubir = new javax.swing.JButton();
        btDescer = new javax.swing.JButton();
        btVerTarefa = new javax.swing.JButton();

        btAumentPrio.setText("Prioridade +");
        btAumentPrio.setToolTipText("Aumentar a prioridade da tarefa");
        btAumentPrio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAumentPrioActionPerformed(evt);
            }
        });

        btDiminuiPrio.setText("Prioridade -");

        btSubir.setText("Para cima");
        btSubir.setToolTipText("Mover a tarefa para cima na lista");
        btSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSubirActionPerformed(evt);
            }
        });

        btDescer.setText("Para baixo");
        btDescer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDescerActionPerformed(evt);
            }
        });

        btVerTarefa.setText("Ver");
        btVerTarefa.setToolTipText("Ver e editar detalhes da tarefa");
        btVerTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerTarefaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAumentPrio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btDescer, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btVerTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btSubir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDiminuiPrio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btAumentPrio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btDiminuiPrio)
                .addGap(18, 18, 18)
                .addComponent(btSubir)
                .addGap(18, 18, 18)
                .addComponent(btDescer)
                .addGap(18, 18, 18)
                .addComponent(btVerTarefa)
                .addGap(170, 170, 170))
        );

        btAumentPrio.getAccessibleContext().setAccessibleName("Prioridade +");
    }// </editor-fold>//GEN-END:initComponents

    private void btAumentPrioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAumentPrioActionPerformed
        LOG_PAINEL_T.traceEntry();

//        JTable tabelaTarefas = painelTabelaTarefas.getTabelaTarefas();
//        ModeloTabelaTarefasLista modeloTabela = painelTabelaTarefas.getModeloTabela();
        // A linha escolhida na tabela
        int linhaSel = tabelaTarefas.getSelectedRow();

        // Posição da tarefa no modelo
        int posicaoSelModelo = tabelaTarefas.convertRowIndexToModel(linhaSel);

        Tarefa tarefaMover = modeloTabela.getTarefas().get(posicaoSelModelo);

        tarefaMover.aumentaPrio();
        DAOTarefa daoT = new DAOTarefa();
        daoT.atualiza(tarefaMover);
        
        modeloTabela.fireTableRowsUpdated(linhaSel, linhaSel);
    }//GEN-LAST:event_btAumentPrioActionPerformed

    private void btSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSubirActionPerformed
        LOG_PAINEL_T.traceEntry();

//        JTable tabelaTarefas = painelTabelaTarefas.getTabelaTarefas();
//        ModeloTabelaTarefasLista modeloTabela = painelTabelaTarefas.getModeloTabela();
        // A linha escolhida na tabela
        int linhaSel = tabelaTarefas.getSelectedRow();

        // Posição da tarefa no modelo
        int posicaoSelModelo = tabelaTarefas.convertRowIndexToModel(linhaSel);

        Tarefa tarefaMover = modeloTabela.getTarefas().get(posicaoSelModelo);

        if (tarefaMover.getPosicao() <= 0) {
            return;
        }

        LOG_PAINEL_T.debug("Pos {} maior que 0", tarefaMover.getTitulo());

        // Remove a posição dela
        DAOTarefa daoT = new DAOTarefa();

        Integer posicaoAt = tarefaMover.getPosicao();
        LOG_PAINEL_T.debug("Pos at {}", posicaoAt);

        Integer posSucMaior = daoT.getMaiorPosicao() + 1;
        LOG_PAINEL_T.debug("Próx m {}", posSucMaior);
        tarefaMover.setPosicao(posSucMaior);
        daoT.atualiza(tarefaMover);

        // Muda a pos da que está na frente pra dela
        Tarefa tLogoFrente = modeloTabela.getTarefas().get(posicaoSelModelo - 1);// daoT.getByPosicao(posicaoAt - 1);

        if (tLogoFrente == null) {
            return;
        }

        LOG_PAINEL_T.debug("T acima {} em {}", tLogoFrente.getTitulo(), posicaoAt - 1);

        tLogoFrente.setPosicao(posicaoAt);

        LOG_PAINEL_T.debug("Pos {} alt para {}", tLogoFrente.getTitulo(), posicaoAt);

        /*
         * Aqui seria importante recarregar a tarefa do banco na tabela da janela
         * principal
         * 
         */
        daoT.atualiza(tLogoFrente);

        tarefaMover.setPosicao(posicaoAt - 1);
        daoT.atualiza(tarefaMover);

        // modeloTabela.setTarefas(daoT.listaTodas());
        modeloTabela.ordena();

        /**
         * Após a ordenação a seleção é perdida
         *
         */
        ListSelectionModel modeloSelecao = tabelaTarefas.getSelectionModel();

        /**
         * Importante não ser duplicada
         */
        int idxNovoModelo = modeloTabela.getTarefas().indexOf(tarefaMover);

        LOG_PAINEL_T.debug("Novo índice tarefa modelo: {}", idxNovoModelo);

        int idxTabela = tabelaTarefas.convertRowIndexToView(idxNovoModelo);

        LOG_PAINEL_T.debug("Novo índice tarefa tabela: {}", idxTabela);

        /**
         * O parâmetro é o índice na tabela
         */
        modeloSelecao.setSelectionInterval(idxTabela, idxTabela);
    }//GEN-LAST:event_btSubirActionPerformed

    private void btDescerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDescerActionPerformed
        LOG_PAINEL_T.traceEntry();

        Tarefa tarefasDescer = modeloTabela.getTarefas()
                .get(tabelaTarefas.convertRowIndexToModel(tabelaTarefas.getSelectedRow()));

        if (tarefasDescer.getPosicao() >= modeloTabela.getTarefas().size() - 1) {
            return;
        }

        Integer posicaoAt = tarefasDescer.getPosicao();

        if (tarefasDescer.getPosicao() < modeloTabela.getTarefas().size() - 1) {
            tarefasDescer.setPosicao(tarefasDescer.getPosicao() + 1);
            LOG_PAINEL_T.debug("Pos alt para " + tarefasDescer.getPosicao());
        }

        // Remove a pos
        DAOTarefa daoT = new DAOTarefa();

        tarefasDescer.setPosicao(daoT.getMaiorPosicao() + 1);
        daoT.atualiza(tarefasDescer);

        LOG_PAINEL_T.debug("Tarefa movida para o fim. Pos: " + tarefasDescer.getPosicao());

        // TODO: Trocar posição da de baixo com a dela
        Tarefa tarAbaixo = daoT.getByPosicao(posicaoAt + 1);
        if (tarAbaixo != null) {
            LOG_PAINEL_T.debug("Tarefa enc pos seg. pos: " + (posicaoAt + 1));
            tarAbaixo.setPosicao(posicaoAt);

            daoT.atualiza(tarAbaixo);
        }

        // TODO: Rever ter se galhar
        tarefasDescer.setPosicao(posicaoAt + 1);
        daoT.atualiza(tarefasDescer);

        modeloTabela.ordena();

        /**
         * Após a ordenação a seleção é perdida
         *
         */
        ListSelectionModel modeloSelecao = tabelaTarefas.getSelectionModel();

        /**
         * Importante não ser duplicada
         */
        int idxNovoModelo = modeloTabela.getTarefas().indexOf(tarefasDescer);

        LOG_PAINEL_T.debug("Novo índice tarefa modelo: {}", idxNovoModelo);

        int idxTabela = tabelaTarefas.convertRowIndexToView(idxNovoModelo);

        LOG_PAINEL_T.debug("Novo índice tarefa tabela: {}", idxTabela);

        /**
         * O parâmetro é o índice na tabela
         */
        modeloSelecao.setSelectionInterval(idxTabela, idxTabela);
    }//GEN-LAST:event_btDescerActionPerformed

    private void btVerTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerTarefaActionPerformed
        DialogoEditarTarefa dialogEditar = new DialogoEditarTarefa(dono, modeloTabela);
        Tarefa t = modeloTabela.getTarefas().get(tabelaTarefas.convertRowIndexToModel(tabelaTarefas.getSelectedRow()));
        dialogEditar.setTarefa(t);
        dialogEditar.setVisible(true);
    }//GEN-LAST:event_btVerTarefaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAumentPrio;
    private javax.swing.JButton btDescer;
    private javax.swing.JButton btDiminuiPrio;
    private javax.swing.JButton btSubir;
    private javax.swing.JButton btVerTarefa;
    // End of variables declaration//GEN-END:variables
}
